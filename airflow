### Airflow Installation Playbook

```yaml
---
- name: Create Python environment
  ansible.builtin.command:
    cmd: python3 -m venv /path/to/your/env
  args:
    creates: /path/to/your/env

- name: Install Ansible 2.9.27
  ansible.builtin.command:
    cmd: /path/to/your/env/bin/pip install ansible==2.9.27
  args:
    creates: /path/to/your/env/bin/ansible

- name: Copy Airflow configuration file
  ansible.builtin.template:
    src: airflow.cfg.j2
    dest: /path/to/your/airflow.cfg

- name: Copy requirements file
  ansible.builtin.template:
    src: requirements.txt.j2
    dest: /path/to/your/requirements.txt

- name: Install requirements
  ansible.builtin.command:
    cmd: /path/to/your/env/bin/pip install -r /path/to/your/requirements.txt
  args:
    creates: /path/to/your/env/bin/airflow


```
### Manage DAGs Playbook

```yaml
---
- name: Manage Airflow DAGs
  hosts: all
  become: yes
  vars:
    dag_action: "add"  # Options: add, remove, update
    dag_name: "example_dag.py"
    dag_folder: "dev"  # Options: dev, production
    repo_url: "https://your-git-repo-url"
    repo_branch: "master"
    dag_repo_path: "/path/to/dags/repo"
    dag_dest_path: "/path/to/airflow/dags/"

  tasks:
    - name: Clone or update repository (only if adding or updating)
      git:
        repo: "{{ repo_url }}"
        dest: "{{ dag_repo_path }}"
        version: "{{ repo_branch }}"
      when: dag_action in ['add', 'update']

    - name: Add DAG
      copy:
        src: "{{ dag_repo_path }}/{{ dag_folder }}/{{ dag_name }}"
        dest: "{{ dag_dest_path }}/{{ dag_name }}"
      when: dag_action == 'add'

    - name: Remove DAG
      file:
        path: "{{ dag_dest_path }}/{{ dag_name }}"
        state: absent
      when: dag_action == 'remove'

    - name: Update DAGs
      synchronize:
        src: "{{ dag_repo_path }}/{{ dag_folder }}/"
        dest: "{{ dag_dest_path }}"
        delete: yes
      when: dag_action == 'update'
```

### Commands to Run the Playbooks

1. **Install Airflow**:
```bash
ansible-playbook install_airflow.yaml -e "airflow_version=2.2.5"
```

2. **Add a DAG**:
```bash
ansible-playbook manage_airflow_dags.yaml -e "dag_action=add dag_name=example_dag.py"
```

3. **Remove a DAG**:
```bash
ansible-playbook manage_airflow_dags.yaml -e "dag_action=remove dag_name=example_dag.py"
```

4. **Update DAGs**:
```bash
ansible-playbook manage_airflow_dags.yaml -e "dag_action=update"
```
